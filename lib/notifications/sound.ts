let audioEl: HTMLAudioElement | null = null; let unlocked=false; let volume=1
export function configureSound(v:{enabled:boolean; volume?:number}){ volume= typeof v.volume==='number'? v.volume: volume; if(!v.enabled) return; if(!audioEl && typeof window!=='undefined'){ try { audioEl=new Audio('/notification.wav'); audioEl.preload='auto' } catch {} } if(audioEl && !unlocked){ const unlock=()=>{ if(!audioEl) return; audioEl.muted=true; audioEl.play().then(()=>{ audioEl!.pause(); audioEl!.currentTime=0; audioEl!.muted=false; unlocked=true; cleanup() }).catch(()=>{}) }; const cleanup=()=>{ window.removeEventListener('pointerdown', unlock); window.removeEventListener('keydown', unlock) }; window.addEventListener('pointerdown', unlock); window.addEventListener('keydown', unlock) } }
export function playSound(){ if(!audioEl||!unlocked) return; try { audioEl.currentTime=0; audioEl.volume=volume; void audioEl.play() } catch {} }
