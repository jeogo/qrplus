import { defaultNotificationPreferences as legacyDefaults } from './config'
export interface UnifiedNotificationPreferences { ui:{ enableToasts:boolean; durationMs:number }; sound:{ enabled:boolean; volume:number }; dedupe:{ windowActionMs:number; windowDomainMs:number }; roles: typeof legacyDefaults.roles; categories:{ action:boolean; domain:boolean; system:boolean; error:boolean; progress:boolean } }
const V2_KEY='notification_prefs_v2', V3_KEY='notification_prefs_v3'
const defaultPrefs: UnifiedNotificationPreferences = { ui:{ enableToasts:true, durationMs:5000 }, sound:{ enabled:true, volume:1 }, dedupe:{ windowActionMs:1500, windowDomainMs:8000 }, roles: legacyDefaults.roles, categories:{ action:true, domain:true, system:true, error:true, progress:true } }
export function loadUnifiedPrefs(): UnifiedNotificationPreferences { if(typeof window==='undefined') return defaultPrefs; try { const raw3=localStorage.getItem(V3_KEY); if(raw3) return { ...defaultPrefs, ...JSON.parse(raw3) } } catch {} try { const raw2=localStorage.getItem(V2_KEY); if(raw2){ const p2=JSON.parse(raw2); const migrated: UnifiedNotificationPreferences = { ui:{ enableToasts:!!p2.enableToasts, durationMs:5000 }, sound:{ enabled:!!p2.enableSound, volume:1 }, dedupe:{ windowActionMs: p2.dedupeMs? Math.min(p2.dedupeMs,4000):1500, windowDomainMs: p2.dedupeMs||8000 }, roles: p2.roles||defaultPrefs.roles, categories:{ action:true, domain:true, system:true, error:true, progress:true } }; saveUnifiedPrefs(migrated); return migrated } } catch {} return defaultPrefs }
export function saveUnifiedPrefs(p: UnifiedNotificationPreferences){ if(typeof window==='undefined') return; try { localStorage.setItem(V3_KEY, JSON.stringify(p)) } catch {} }
export function updateUnifiedPrefs(mut:(p:UnifiedNotificationPreferences)=>UnifiedNotificationPreferences|void){ const current=loadUnifiedPrefs(); const next= mut(current)||current; saveUnifiedPrefs(next); return next }
